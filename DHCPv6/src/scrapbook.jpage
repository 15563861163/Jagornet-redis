java.nio.ByteBuffer bb = java.nio.ByteBuffer.allocate(1024);
byte[] hex = new byte[] { (byte)0x01, (byte)0x02, (byte)0x03, (byte)0x04,
    					  (byte)0x05, (byte)0x06, (byte)0x07, (byte)0x08,
    					  (byte)0x0a, (byte)0xfb };

String ascii = "ascii text";
bb.putShort((short)ascii.length());
//bb.put(ascii.getBytes());
bb.put(hex);

bb.flip();

byte[] data = new byte[bb.getShort()];
bb.get(data);
String str = new String(data);
if (str.matches("\\p{Print}+"))
	System.out.println(str);
else
    for (int i=0; i<str.length(); i++)
        System.out.println("0x" + data[i]);

String[] labels = "foo.bar.baz".split("\\.");
System.out.println(labels.length);

String splitme = "addr1, addr2, \naddr3";
System.out.println(splitme);
String[] split = splitme.split("[,\\p{Space}+]");
for (int i=0; i<split.length; i++)
    System.out.println("s[" + i + "]=" + split[i]);

java.net.DatagramSocket ds = 
    new java.net.DatagramSocket(new java.net.InetSocketAddress("::0", 555));

org.apache.mina.transport.socket.nio.NioDatagramAcceptor acceptor =
    new org.apache.mina.transport.socket.nio.NioDatagramAcceptor();
acceptor.setDefaultLocalAddress(new java.net.InetSocketAddress("::1", 555));
acceptor.setHandler(new org.apache.mina.common.IoHandlerAdapter());
acceptor.bind();

java.nio.ByteBuffer bb2 = java.nio.ByteBuffer.wrap(new byte[] { (byte)0xff, (byte)0xff });
bb2.rewind();
Short s = bb2.getShort();
System.out.println("short=" + s);
System.out.println("long=" + s.longValue());

org.apache.mina.common.IoBuffer iobuf = org.apache.mina.common.IoBuffer.allocate(1);
short s = 255;
iobuf.put((byte)s);
iobuf.rewind();
short ubyte = iobuf.getUnsigned();
System.out.println("ubyte=" + ubyte);


org.apache.mina.common.IoBuffer iobuf = org.apache.mina.common.IoBuffer.allocate(2);
int i = 65535;
iobuf.putShort((short)i);
iobuf.rewind();
int ushort = iobuf.getUnsignedShort();
System.out.println("ushort=" + ushort);
