#********************************************************************
# Java Executable Properties
#********************************************************************
# Java Application
wrapper.java.command=java

# or define conditions for YAJSW searching for a JVM
# currently only valid for windows
#wrapper.java.command.minVersion=1.5
#wrapper.java.command.maxVersion=1.6
#wrapper.java.command.jreOnly=true
#wrapper.java.command.jdkOnly=true
#wrapper.java.command.preferJre=true
#wrapper.java.command.preferJdk=true
#wrapper.java.command.javaw=true

# copy java.exe to <tmp>/java_<customProcName>_nnnn.exe
#wrapper.java.customProcName=

#********************************************************************
# working directory
#********************************************************************
wrapper.working.dir=..

# Java Main class.  
# YAJSW: default is "org.rzo.yajsw.app.WrapperJVMMain" 
# DO NOT SET THIS PROPERTY UNLESS YOU HAVE YOUR OWN IMPLEMENTATION
# wrapper.java.mainclass=

#********************************************************************
# Application Properties
# One of the following properties MUST be defined
#********************************************************************

# Java Application main class
wrapper.java.app.mainclass=com.jagornet.dhcpv6.server.DhcpV6Server

# or jar file
#wrapper.java.jar=

# or groovy script file
#wrapper.groovy=

#or an executable
#wrapper.image=

# Process priority: LOW, BELOW_NORMAL, NORMAL, ABOVE_NORMAL, HIGH
#wrapper.priority

# CPU affinity of the process. this is a bit-array representing the cpus
#wrapper.affinity=

#********************************************************************
# Application Console Properties
#********************************************************************
#wrapper.console.visible=false

#********************************************************************
# Application Account
# Default is the user running the wrapper.  The logged in user must
# have Administrator privileges on Windows, otherwise specify the
# Administrator account to be used to install and run the service.
#********************************************************************
#wrapper.app.account=administrator
#wrapper.app.password=password

#********************************************************************
# Java/Groovy Application Properties
#********************************************************************

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
# YAJSW: all libs required by YAJSW are in the manifest of the wrapper.jar -> only classpath of your application is required
wrapper.java.classpath.1=../lib/commons-cli-1.1.jar
wrapper.java.classpath.2=../lib/commons-logging-1.1.1.jar
wrapper.java.classpath.3=../lib/derby-10.5.3.0.jar
wrapper.java.classpath.4=../lib/derbyclient-10.5.3.0.jar
wrapper.java.classpath.5=../lib/dhcpv6-1.0.0-beta1.jar
wrapper.java.classpath.6=../lib/dnsjava-2.0.8.jar
wrapper.java.classpath.7=../lib/jsr173_1_0_api.jar
wrapper.java.classpath.8=../lib/log4j-1.2.15.jar
wrapper.java.classpath.9=../lib/netty-3.1.5.GA.jar
wrapper.java.classpath.10=../lib/slf4j-api-1.5.0.jar
wrapper.java.classpath.11=../lib/slf4j-log4j12-1.5.0.jar
wrapper.java.classpath.12=../lib/aopalliance.jar
wrapper.java.classpath.13=../lib/org.springframework.aop-3.0.1.RELEASE-A.jar
wrapper.java.classpath.14=../lib/org.springframework.asm-3.0.1.RELEASE-A.jar
wrapper.java.classpath.15=../lib/org.springframework.beans-3.0.1.RELEASE-A.jar
wrapper.java.classpath.16=../lib/org.springframework.context-3.0.1.RELEASE-A.jar
wrapper.java.classpath.17=../lib/org.springframework.core-3.0.1.RELEASE-A.jar
wrapper.java.classpath.18=../lib/org.springframework.expression-3.0.1.RELEASE-A.jar
wrapper.java.classpath.19=../lib/org.springframework.jdbc-3.0.1.RELEASE-A.jar
wrapper.java.classpath.20=../lib/org.springframework.transaction-3.0.1.RELEASE-A.jar
wrapper.java.classpath.21=../lib/xbean.jar
wrapper.java.classpath.22=../lib/xmltypes.jar
# Add the %DHCPV6_HOME%/conf folder to the classpath so
# that the server can find the log4j.properties file
wrapper.java.classpath.23=../conf

# Java Library Path
# YAJSW: required dll are encapsulated in jar files -> only library path of your application required
# wrapper.java.library.path.1=../lib

# Java Additional Parameters
wrapper.java.additional.1=-Ddhcpv6.home=../
wrapper.java.additional.2=-Dderby.system.home=../db/derby/
# The log4j.properties file is found in the classpath
#wrapper.java.additional.3=-Dlog4j.configuration=log4j.properties

# Initial Java Heap Size (in MB)
# YAJSW: currently not implemented -> use for example wrapper.java.additional.<n>=-Xmx
#wrapper.java.initmemory=3
#wrapper.java.initmemory.realtive=10

# Maximum Java Heap Size (in MB)
# YAJSW: currently not implemented -> use for example wrapper.java.additional.<n>=-Xmx
#wrapper.java.maxmemory=64
#wrapper.java.maxmemory.realtive=30

# Application parameters.  Add parameters as needed starting from 1
# YAJSW: to specify the main class please use wrapper.java.app.mainclass=
# wrapper.app.parameter.1=<YourMainClass>
wrapper.app.parameter.1=-c
wrapper.app.parameter.2=../conf/dhcpv6server.xml
wrapper.app.parameter.3=-p
wrapper.app.parameter.4=547


#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
# wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
#wrapper.logfile=${wrapper.working.dir}/logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
#wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
#wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
#wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
#wrapper.logfile.maxfiles=10

#********************************************************************
# Wrapper Windows Console Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=jagornetdhcpv6

#********************************************************************
# Wrapper Windows Service and Posix Daemon Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=jagornetdhcpv6

# Display name of the service
wrapper.ntservice.displayname=Jagornet DHCPv6 Server

# Description of the service
wrapper.ntservice.description=Jagornet DHCPv6 Server

# Service dependencies.  Add dependencies as needed starting from 1
# wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
# YAJSW: currently not implemented -> defaults to MANUAL
# wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
# YAJSW: currently not implemented -> defaults to false
# wrapper.ntservice.interactive=false

#********************************************************************
# Wrapper System Tray Properties
#********************************************************************
# enable system tray
wrapper.tray = true

# tray icon file to use
#wrapper.tray.icon=

#********************************************************************
# Exit Code Properties
# Restart on non zero exit code
#********************************************************************
wrapper.on_exit.0=SHUTDOWN
#wrapper.on_exit.default=RESTART

#********************************************************************
# Trigger actions on console output
#********************************************************************
# On Exception show message in system tray
wrapper.filter.trigger.0=Exception
wrapper.filter.script.0=scripts/trayMessage.gv
wrapper.filter.script.0.args=Exception

#********************************************************************
# genConfig: Further generated Properties
#********************************************************************
placeHolderSoGenPropsComeHere=
