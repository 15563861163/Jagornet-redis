#!/bin/sh

NAME="Jagornet DHCPv6 Server"

OP=$1
# shift causes all arguments to be moved left by one
# which essentially removes this wrapper script's argument
shift
#echo "$@"
DHCPV6_OPTS="$@"

if [ -n "$JAVA_HOME" ] ; then
  JAVA="$JAVA_HOME/bin/java"
else
  if [ -x java ] ; then
    JAVA=java
  else
    echo "Error - Java not found.  Please set JAVA_HOME environment variable."
    exit 1
  fi
fi

# This block of shell script for determining the
# application's home directory was borrowed from 
# the Apache ActiveMQ server startup script.
if [ -z "$DHCPV6_HOME" ] ; then
  # try to find DHCPV6
  if [ -d /opt/jagornet/dhcpv6 ] ; then
    DHCPV6_HOME=/opt/jagornet/dhcpv6
  fi

  if [ -d "${HOME}/opt/jagornet/dhcpv6" ] ; then
    DHCPV6_HOME="${HOME}/opt/jagornet/dhcpv6"
  fi

  ## resolve links - $0 may be a link dhcpv6's home
  PRG="$0"
  progname=`basename "$0"`
  saveddir=`pwd`

  # need this for relative symlinks
  dirname_prg=`dirname "$PRG"`
  cd "$dirname_prg"

  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '.*/.*' > /dev/null; then
    PRG="$link"
    else
    PRG=`dirname "$PRG"`"/$link"
    fi
  done

  DHCPV6_HOME=`dirname "$PRG"`/..

  cd "$saveddir"

  # make it fully qualified
  DHCPV6_HOME=`cd "$DHCPV6_HOME" && pwd`
fi

# Add the config directory to the beginning of the CLASSPATH
# so that the server can find the log4j.properties file
DHCPV6_CLASSPATH="$DHCPV6_HOME/conf"

# Loop through all the jars, and add them to the CLASSPATH
for file in `find $DHCPV6_HOME/lib/ -name *.jar`
do
DHCPV6_CLASSPATH="$DHCPV6_CLASSPATH:$file"
done

CLASSPATH=$CLASSPATH:$DHCPV6_CLASSPATH; export CLASSPATH

# The "main" Java class for the DHCPv6 Server
DHCPV6_MAIN="com.jagornet.dhcpv6.server.DhcpV6Server"

# The "main" Java class for the DHCPv6 Test Client
DHCPV6TESTCLIENT_MAIN="com.jagornet.dhcpv6.client.TestClient"

# Note: log4j.configuration property references a file in the classpath (see above)
#       the default is shown, change only if necessary
#LOG4J="-Dlog4j.configuration=log4j.properties"

# The Jagornet DHCPv6 server supports Java Management Extensions (JMX)
# for managing logging parameters and monitoring server statistics.
# Sun's JRE 6 provides out-of-the-box support for JMX as described at
# http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html.
	 
JAVA_OPTS="-server $LOG4J $JMX"

DHCPV6_PID="$DHCPV6_HOME/dhcpv6server.pid"

isRunning() {

	if [ -f "$DHCPV6_PID" ]; then
	   ps -p `cat $DHCPV6_PID` > /dev/null 2>&1
	   if [ $? -eq 0 ]; then
	      return 1;
	   fi
	fi
	return 0;
}

start() {

	isRunning
	if [ "$?" -eq "1" ]; then
		echo "$NAME already running."
	else
		echo "Starting $NAME..."
		$JAVA $JAVA_OPTS -Ddhcpv6.home="$DHCPV6_HOME" $DHCPV6_MAIN $DHCPV6_OPTS > "$DHCPV6_HOME/log/dhcpv6server.out" & 
		echo "$!" > $DHCPV6_PID
		sleep 5
		isRunning
		if [ "$?" -eq "1" ]; then
			echo "$NAME started."
		fi
	fi
}

stop() {

	isRunning
	if [ "$?" -ne "1" ]; then
		echo "$NAME is not running."
	else
		if [ -f "$DHCPV6_PID" ]; then
		   echo "Stopping $NAME..."
		   kill `cat $DHCPV6_PID` > /dev/null 2>&1
		   sleep 3
		   isRunning
		   if [ "$?" -ne "1" ]; then
			  echo "$NAME stopped."
		   fi		   
		   if [ $? -eq 0 ];then
		      rm -f $DHCPV6_PID
		   fi
		fi
	fi
}

status() {
	isRunning
	if [ "$?" -eq "1" ]; then
		echo "$NAME is running."
	else
		echo "$NAME is not running."
	fi
}

testclient() {
	echo "Running TestClient..."
	$JAVA -Ddhcpv6.home="$DHCPV6_HOME" -Dlog4j.configuration="testclient_log4j.properties" $DHCPV6TESTCLIENT_MAIN $DHCPV6_OPTS 
}


case "$OP" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		sleep 2
		start
		;;
	status)
		status
		;;
	testclient)
		testclient
		;;
	*)
		echo "Usage: $0 { start | stop | restart | status | testclient }"
		exit 1
		;;
esac
exit 0
